{"version":3,"file":"static/js/247.00f72072.chunk.js","mappings":"+PAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE4BC,EAAAA,EAAAA,IAAeN,GAF3C,OAEUO,EAFV,OAGIH,EAAQG,GAHZ,gDAKIC,QAAQC,IAAI,aAAZ,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACV,KAGF,0BACE,wBACGG,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBACEC,IAAG,yCAAoCH,GACvCI,IAAKH,KAEP,wBAAKA,KACL,uCACA,uBAAIC,MAPGH,EADD,OAcjB,C,+LC9BM,SAAeM,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,uBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAgCC,EAAhC,+BAAwC,SAAxC,SACkBL,EAAAA,EAAAA,IAAA,8BAAiCK,IADnD,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,mEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bb,GAA9B,uFACkBO,EAAAA,EAAAA,IAAA,iBAAoBP,IADtC,cACCQ,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAef,EAAtB,+CAAO,OAAP,oBAAO,WAA8BM,GAA9B,yFACkBO,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,aADlB,cACCQ,EADD,OAECjB,EAAOiB,EAASC,KAAKlB,KAFtB,kBAGEA,GAHF,kEAMA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCd,GAAjC,yFACkBO,EAAAA,EAAAA,IAAA,iBAAoBP,EAApB,aADlB,cACCQ,EADD,OAECjB,EAAOiB,EAASC,KAAKC,QAFtB,kBAGEnB,GAHF,kEA1BPgB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBQ,QAAS,mC","sources":["components/Cast/Cast.jsx","services/themoviedbApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCast } from 'services/themoviedbApi';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    async function getMovieCast() {\n      try {\n        const movieCast = await fetchMovieCast(movieId);\n        setCast(movieCast);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    getMovieCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {cast.map(({ id, profile_path, name, character }) => (\n          <li key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${profile_path}`}\n              alt={name}\n            />\n            <h3>{name}</h3>\n            <p>Character:</p>\n            <p>{character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'e55542ecb6aab3d889d16953eac82937',\n};\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function fetchMovieByName(query = 'avatar') {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  const cast = response.data.cast;\n  return cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  const cast = response.data.results;\n  return cast;\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","fetchMovieCast","movieCast","console","log","getMovieCast","map","id","profile_path","name","character","src","alt","fetchTrending","axios","response","data","results","fetchMovieByName","query","fetchMovieById","fetchMovieReviews","api_key"],"sourceRoot":""}