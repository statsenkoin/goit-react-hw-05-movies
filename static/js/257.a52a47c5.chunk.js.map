{"version":3,"file":"static/js/257.a52a47c5.chunk.js","mappings":"kSAEaA,EAAUC,EAAAA,GAAAA,IAAH,iGAMPC,EAAYD,EAAAA,GAAAA,IAAH,0CAITE,EAAQF,EAAAA,GAAAA,IAAH,0HASLG,EAAOH,EAAAA,GAAAA,IAAH,0CAIJI,EAAQJ,EAAAA,GAAAA,GAAH,gH,SCnBH,SAASK,IAAgB,IAAD,IACrC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAE5CC,EACNV,EADMU,YAAaC,EACnBX,EADmBW,MAAOC,EAC1BZ,EAD0BY,aAAcC,EACxCb,EADwCa,SAAUC,EAClDd,EADkDc,aAAcC,EAChEf,EADgEe,OAE5DC,EAAO,IAAIC,KAAKH,GAAcI,cAcpC,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BC,EAAAA,EAAAA,IAAelB,GAF7C,OAEUmB,EAFV,OAGIpB,EAASoB,GAHb,gDAKIC,QAAQC,IAAI,aAAZ,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACtB,KAGF,UAAC,KAAD,YACE,SAAC,KAAD,CAAUuB,GAAInB,EAAaoB,QAA3B,sBACA,SAAClC,EAAD,WACE,UAACE,EAAD,YACE,SAACC,EAAD,CACEgC,IACEjB,EAAW,0CAC4BA,GAD5B,sCAIbkB,IAAG,UAAKjB,MAEV,UAACf,EAAD,YACE,UAACC,EAAD,qBAAWc,EAAX,aAAqBK,EAArB,aACA,kDAAmBa,KAAKC,MAAqB,GAAflB,IAA9B,QACA,sCACA,iCAAOC,MACP,mCACCE,IAAU,uBAAIA,EAAOgB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,gBAIzD,UAACzC,EAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMiC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,8BAIN,SAAC,EAAAS,SAAD,CAAUC,UAAU,SAAC,KAAD,IAApB,UACE,SAAC3C,EAAD,WACE,SAAC,KAAD,UAKT,C,+LC9DM,SAAe4C,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,uBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACkBL,EAAAA,EAAAA,IAAA,8BAAiCK,IADnD,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BuB,GAA9B,uFACkBN,EAAAA,EAAAA,IAAA,iBAAoBM,IADtC,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,yFACkBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADlB,cACCL,EADD,OAECO,EAAOP,EAASC,KAAKM,KAFtB,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,yFACkBN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,aADlB,cACCL,EADD,OAECO,EAAOP,EAASC,KAAKC,QAFtB,kBAGEK,GAHF,kEA1BPR,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBU,QAAS,mC","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/themoviedbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.div`\n  max-width: 1000px;\n  padding: 20px 0;\n  border-top: 2px solid #888;\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n`;\n\nexport const Image = styled.img`\n  width: 250px;\n  height: fit-content;\n\n  @media (max-width: 768px) {\n    width: 150px;\n  }\n`;\n\nexport const Meta = styled.div`\n  padding: 20px;\n`;\n\nexport const Title = styled.h3`\n  margin: 0;\n  font-size: 24px;\n  text-align: center;\n  text-decoration: underline;\n`;\n","import { useEffect, useRef, useState, Suspense } from 'react';\nimport { useLocation, useParams, Link, Outlet } from 'react-router-dom';\nimport { fetchMovieById } from 'services/themoviedbApi';\nimport { BackLink, PageWrapper, LoadingPage } from 'components';\nimport { Section, MovieCard, Image, Meta, Title } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  const { poster_path, title, vote_average, overview, release_date, genres } =\n    movie;\n  const year = new Date(release_date).getFullYear();\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const filmDetails = await fetchMovieById(movieId);\n        setMovie(filmDetails);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  return (\n    <PageWrapper>\n      <BackLink to={backLinkHref.current}>Go back</BackLink>\n      <Section>\n        <MovieCard>\n          <Image\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : `https://via.placeholder.com/250x375`\n            }\n            alt={`${title}`}\n          />\n          <Meta>\n            <Title>{`${title} (${year})`} </Title>\n            <p>User Score: {`${Math.round(vote_average * 10)}`}%</p>\n            <h3>Owerview</h3>\n            <p>{`${overview}`}</p>\n            <h3>Genres</h3>\n            {genres && <p>{genres.map(({ name }) => name).join(' ')}</p>}\n          </Meta>\n        </MovieCard>\n      </Section>\n      <Section>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n      </Section>\n      <Suspense fallback={<LoadingPage />}>\n        <Section>\n          <Outlet />\n        </Section>\n      </Suspense>\n    </PageWrapper>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'e55542ecb6aab3d889d16953eac82937',\n};\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  const cast = response.data.cast;\n  return cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  const cast = response.data.results;\n  return cast;\n}\n"],"names":["Section","styled","MovieCard","Image","Meta","Title","MovieDetails","useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","poster_path","title","vote_average","overview","release_date","genres","year","Date","getFullYear","useEffect","fetchMovieById","filmDetails","console","log","getMovieDetails","to","current","src","alt","Math","round","map","name","join","Suspense","fallback","fetchTrending","axios","response","data","results","fetchMovieByName","query","id","fetchMovieCast","cast","fetchMovieReviews","api_key"],"sourceRoot":""}