{"version":3,"file":"static/js/278.946cede6.chunk.js","mappings":"uQAMe,SAASA,IACtB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAqBA,OAlBAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAK,UAAGH,EAAYI,IAAI,gBAAnB,QAA+B,GAD5B,wCAEd,8GAE8BC,EAAAA,EAAAA,IAAiBF,GAF/C,OAEUG,EAFV,OAGIR,EAAYQ,GAHhB,gDAKIC,QAAQC,IAAI,aAAZ,MALJ,0DAFc,0DAUdC,EACD,GAAE,CAACT,KAQF,UAAC,KAAD,YACE,SAAC,KAAD,CAAWU,kBAPf,SAA2BP,GAEzBF,EAD4B,KAAVE,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAE/C,KAKG,SAAC,KAAD,CAAUN,SAAUA,MAGzB,C,+LC5BM,SAAec,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,uBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeV,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,uFACkBS,EAAAA,EAAAA,IAAA,8BAAiCT,IADnD,cACCU,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,uFACkBL,EAAAA,EAAAA,IAAA,iBAAoBK,IADtC,cACCJ,EADD,yBAEEA,EAASC,MAFX,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,yFACkBL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,OAECM,EAAON,EAASC,KAAKK,KAFtB,kBAGEA,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,yFACkBL,EAAAA,EAAAA,IAAA,iBAAoBK,EAApB,aADlB,cACCJ,EADD,OAECM,EAAON,EAASC,KAAKC,QAFtB,kBAGEI,GAHF,kEA1BPP,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBS,QAAS,mC","sources":["pages/Movies/Movies.jsx","services/themoviedbApi.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n// import { Link, useLocation } from 'react-router-dom';\nimport { fetchMovieByName } from 'services/themoviedbApi';\nimport { PageWrapper, FilmList, Searchbar } from 'components';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [filmList, setFilmList] = useState([]);\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  // const location = useLocation();\n\n  useEffect(() => {\n    const query = searchQuery.get('query') ?? '';\n    async function getFilmsByName() {\n      try {\n        const filmsByName = await fetchMovieByName(query);\n        setFilmList(filmsByName);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    getFilmsByName();\n  }, [searchQuery]);\n\n  function handleSearchInput(query) {\n    const nextQuery = query !== '' ? { query } : {};\n    setSearchQuery(nextQuery);\n  }\n\n  return (\n    <PageWrapper>\n      <Searchbar handleSearchInput={handleSearchInput}></Searchbar>\n      <FilmList filmList={filmList} />\n    </PageWrapper>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'e55542ecb6aab3d889d16953eac82937',\n};\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function fetchMovieByName(query) {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n\nexport async function fetchMovieCast(id) {\n  const response = await axios.get(`/movie/${id}/credits`);\n  const cast = response.data.cast;\n  return cast;\n}\n\nexport async function fetchMovieReviews(id) {\n  const response = await axios.get(`/movie/${id}/reviews`);\n  const cast = response.data.results;\n  return cast;\n}\n"],"names":["Movies","useState","filmList","setFilmList","useSearchParams","searchQuery","setSearchQuery","useEffect","query","get","fetchMovieByName","filmsByName","console","log","getFilmsByName","handleSearchInput","fetchTrending","axios","response","data","results","fetchMovieById","id","fetchMovieCast","cast","fetchMovieReviews","api_key"],"sourceRoot":""}