{"version":3,"file":"static/js/961.492f4648.chunk.js","mappings":"gRAMe,SAASA,IAAgB,IAAD,IAC7BC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC7C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BC,EAAAA,EAAAA,IAAeV,GAF7C,OAEUW,EAFV,OAGIH,EAASG,GAHb,gDAKIC,QAAQC,IAAI,aAAZ,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACd,IAEJ,IAAQe,EACNR,EADMQ,YAAaC,EACnBT,EADmBS,MAAOC,EAC1BV,EAD0BU,aAAcC,EACxCX,EADwCW,SAAUC,EAClDZ,EADkDY,aAAcC,EAChEb,EADgEa,OAE5DC,EAAO,IAAIC,KAAKH,GAAcI,cACpC,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAUC,GAAItB,EAAd,sBAEA,oCAAQc,EAAR,aAAkBK,EAAlB,aACA,gBACEI,IAAG,0CAAqCV,GACxCW,IAAG,UAAKV,MAEV,kDAAmBW,KAAKC,MAAqB,GAAfX,IAA9B,QACA,sCACA,iCAAOC,MACP,mCACCE,IAAU,uBAAIA,EAAOS,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,QACnD,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMP,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C,+ICtCM,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,uBADlB,cACCC,EADD,yBAEEA,EAASC,KAAKC,SAFhB,kEAKA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAgCC,EAAhC,+BAAwC,SAAxC,SACkBL,EAAAA,EAAAA,IAAA,8BAAiCK,IADnD,cACCJ,EADD,yBAEEA,EAASC,KAAKC,SAFhB,mEAKA,SAAe5B,EAAtB,+CAAO,OAAP,oBAAO,WAA8B+B,GAA9B,uFACkBN,EAAAA,EAAAA,IAAA,iBAAoBM,IADtC,cACCL,EADD,yBAEEA,EAASC,MAFX,kEAzBPF,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBO,QAAS,mC","sources":["pages/MovieDetails/MovieDetails.jsx","services/themoviedbApi.js"],"sourcesContent":["import { useLocation, useParams } from 'react-router-dom';\nimport { Link, Outlet } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { fetchMovieById } from 'services/themoviedbApi';\nimport { BackLink, PageWrapper } from 'components';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        const filmDetails = await fetchMovieById(movieId);\n        setMovie(filmDetails);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    getMovieDetails();\n  }, [movieId]);\n\n  const { poster_path, title, vote_average, overview, release_date, genres } =\n    movie;\n  const year = new Date(release_date).getFullYear();\n  return (\n    <PageWrapper>\n      <BackLink to={backLinkHref}>Go back</BackLink>\n\n      <h3>{`${title} (${year})`} </h3>\n      <img\n        src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n        alt={`${title}`}\n      />\n      <p>User Score: {`${Math.round(vote_average * 10)}`}%</p>\n      <h3>Owerview</h3>\n      <p>{`${overview}`}</p>\n      <h3>Genres</h3>\n      {genres && <p>{genres.map(({ name }) => name).join(' ')}</p>}\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </PageWrapper>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: 'e55542ecb6aab3d889d16953eac82937',\n};\n\n// https://api.themoviedb.org/3/trending/movie/day&api_key=...\n// https://api.themoviedb.org/3/search/movie?query=avatar&api_key=...\n// https://api.themoviedb.org/3/movie/{id}&api_key=...\n// response.data = {\n// \"page\": 1,\n// \"results\": [20 items],\n// \"total_pages\": 1000,\n// \"total_results\": 20000\n// }\n\nexport async function fetchTrending() {\n  const response = await axios.get(`/trending/movie/day`);\n  return response.data.results;\n}\n\nexport async function fetchMovieByName(query = 'avatar') {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(`/movie/${id}`);\n  return response.data;\n}\n"],"names":["MovieDetails","movieId","useParams","backLinkHref","useLocation","state","from","useState","movie","setMovie","useEffect","fetchMovieById","filmDetails","console","log","getMovieDetails","poster_path","title","vote_average","overview","release_date","genres","year","Date","getFullYear","to","src","alt","Math","round","map","name","join","Suspense","fallback","fetchTrending","axios","response","data","results","fetchMovieByName","query","id","api_key"],"sourceRoot":""}